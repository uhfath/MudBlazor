@namespace MudBlazor.Internal
@using MudBlazor.Utilities;



<div class="@_class" style="@Style">
    @if (!string.IsNullOrWhiteSpace(Text))
    {
        <MudText Color="@Color" tabindex="-1" title="@ToolTip">@Text</MudText>
    }
    else if (!string.IsNullOrWhiteSpace(Icon))
    {
        @if (ShowFocus)
        {
            <MudIconButton Icon="@Icon" OnClick="@AdornmentClick" Edge="@Edge" Size="@Size" Color="@Color" Disabled="Disabled" aria-label="@(!string.IsNullOrEmpty(AriaLabel) ? AriaLabel : "Icon Button")" tabindex="-1" Title="@ToolTip" />
        }
        else
        {
            <MudIcon Icon="@Icon" Size="@Size" Color="@Color" @onclick="AdornmentClick" aria-label="@(!string.IsNullOrEmpty(AriaLabel) ? AriaLabel : "Icon")" tabindex="-1" Title="@ToolTip" />
        }
    }
</div>


@code {
    [Parameter] public string Class { get; set; }
    [Parameter] public string Style { get; set; }
    [Parameter] public string Text { get; set; }
    [Parameter] public string Icon { get; set; }
    [Parameter] public Edge Edge { get; set; }
    [Parameter] public Size Size { get; set; } = Size.Medium;
    [Parameter] public Color Color { get; set; } = Color.Default;
    [Parameter] public string AriaLabel { get; set; }
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public bool ShowFocus { get; set; } = true;
    [Parameter] public string ToolTip { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> AdornmentClick { get; set; }

    private string _class => new CssBuilder(Class)
        .AddClass("mud-disabled", Disabled)
        .Build();
}
